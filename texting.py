import telebot as tb
from time import sleep,time
from random import randint
bot = tb.TeleBot('')
adlist = bot.get_chat_administrators(-1002005260221)
@bot.message_handler(content_types=['text'])
def getting_message(message):
    mes = message.text.lower()
    if mes == '–±–æ—Ç':
        bot.reply_to(message, '‚úÖ –†–æ–±–æ—Ç –≤ –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ!')
    if mes == '—Ä—É–ª–µ—Ç–∫–∞':
        gitler(message)
    if mes == '–º—É—Ç':
        if message.reply_to_message:
            mute(message)
        else:
            bot.reply_to(message, '–û—Ç–≤–µ—Ç—å—Ç–µ –ø—Ä–æ–≤–∏–Ω–∏–≤—à–µ–º—É—Å—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
    if '–Ω–∞—Å–∫–æ–ª—å–∫–æ' == mes.split()[0]:
        nask(message)

def gitler(message):
    ochko = bot.send_dice(message.chat.id).dice.value
    sleep(4)
    if ochko == 1:
        gotta = bot.reply_to(message, '–ê–•–∞—Ö—Ö–∞—Ö–∞—Ö—Ö–∞—Ö–∞ —Ç—É–¥–∞–∞–∞–∞–∞–∞ –±–æ—Ç—è—Ä–∏—É—Å')
        bot.kick_chat_member(message.chat.id, message.from_user.id, until_date= int(gotta.date + 20))
    else:
        bot.reply_to(message, '–ñ–∏–≤–∏, –ª–∞–¥–Ω–æ —É–∂ üòà')

def lastcheck(message, timed, perm):
    isadmin = any(admin.user.id == message.from_user.id for admin in adlist)
    if not isadmin:
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date=timed, permissions=perm)
        mute_duration = int(message.text.split()[1])
        bot.reply_to(message, f'{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {mute_duration} —Å–µ–∫—É–Ω–¥')
    elif isadmin:
        bot.reply_to(message, '–ê–¥–º–∏–Ω–æ–≤ –º—É—Ç–∏—Ç—å –Ω–µ–ª—å–∑—è')
    else:
        bot.reply_to(message, '–¢—ã —Å–ª–∞–±–∞–∫, –ø–æ—ç—Ç–æ–º—É —Ç—ã –Ω–∏–∫–æ–≥–æ –º—É—Ç–∏—Ç—å –Ω–µ –º–æ–∂–µ—à—å –ª–æ—à–∞—Ä–∞')

def mute(message):
    perm = tb.types.ChatPermissions(can_send_messages=False)
    try:
        mute_duration = int(message.text.split()[1])
        timed = int(time()) + mute_duration
        lastcheck(message, timed, perm)
    except (IndexError, ValueError):
        bot.reply_to(message,'–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞')

def nask(message):
    bot.reply_to(message, f'–Ø —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –Ω–∞ {randint(0,100)}% !')
    
bot.infinity_polling()
